rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // --- User & Member Data ---
    // Users can read/update their own data. Admins have full access.
    match /users/{userId} {
      allow read, update: if isAdmin() || isOwner(userId);
      allow create: if isSignedIn();
      allow delete: if isAdmin();
    }

    match /members/{memberId} {
      allow read, update: if isAdmin() || isOwner(memberId);
      allow create: if isOwner(memberId);
      allow delete: if isAdmin();
    }

    // --- Publicly Readable Data for any Signed-in User ---
    match /groups/{groupId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();

      match /members/{memberId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
      }
    }

    match /appointmentTypes/{typeId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /locations/{locationId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /news/{newsId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /penalties/{penaltyId} {
       allow read: if isSignedIn();
       allow write: if isAdmin();
    }
    
    match /appointmentExceptions/{exceptionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // --- Collections with specific access logic ---
    match /polls/{pollId} {
        // Allow any signed-in user to read (get, list) polls. 
        // Client-side queries handle filtering which polls are visible.
        allow read: if isSignedIn(); 
        allow create, delete: if isAdmin();
        // Allow any signed-in user to vote (update the votes array).
        allow update: if isSignedIn(); 
    }

    match /appointments/{appointmentId} {
      allow read: if isSignedIn(); 
      allow write: if isAdmin();
    }
    
    match /appointmentResponses/{responseId} {
      allow create: if isSignedIn();
      allow read, update, delete: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow list: if isAdmin();
    }

    match /treasury/{transactionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
  }
}
