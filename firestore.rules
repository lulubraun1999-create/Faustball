
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      // In production, you might want to check a custom claim or a document in a specific 'admins' collection.
      // For this app, we'll check the 'role' field in the user's own document.
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // --- User & Member Data ---
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isSignedIn(); // Allow user creation upon signup
      allow delete: if isAdmin();
    }

    match /members/{memberId} {
      // Members can read/update their own profile. Admins can manage all.
      allow read, update: if isOwner(memberId) || isAdmin();
      allow create: if isSignedIn();
      allow delete: if isAdmin();
    }

    // --- Groups & Group Membership ---
    match /groups/{groupId} {
      allow read: if isSignedIn();
      allow write: if isAdmin(); // create, update, delete groups

      match /members/{memberId} {
        allow read: if isSignedIn();
        allow write: if isAdmin(); // add/remove members from groups
      }
    }

    // --- Polls ---
    // Any signed-in user can read polls (client-side queries will filter them).
    // Any signed-in user can vote (update the 'votes' array).
    // Only admins can create or delete polls.
    match /polls/{pollId} {
      allow read, update: if isSignedIn();
      allow create, delete: if isAdmin();
    }

    // --- Appointments, Types, and Locations ---
    match /appointments/{appointmentId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    match /appointmentTypes/{typeId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    match /locations/{locationId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    match /appointmentExceptions/{exceptionId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    match /appointmentResponses/{responseId} {
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow read, update, delete: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
    }
    

    // --- News, Treasury, Penalties ---
    // Generally readable by all signed-in users, writable only by admins.
    match /news/{newsId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /treasury/{transactionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /penalties/{penaltyId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
  }
}
