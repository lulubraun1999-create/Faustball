
{
  "entities": {
    "User": {
      "title": "User",
      "type": "object",
      "description": "Represents a user account within the FaustApp application, primarily for authentication purposes. Core data is written once on registration and is mostly read-only afterwards.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user account (matches Firebase Auth UID)."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user. Should not be editable after registration."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user. Should not be editable after registration."
        },
        "role": {
          "type": "string",
          "description": "User role, e.g., 'admin' or 'user'.",
          "enum": [
            "admin",
            "user"
          ]
        },
        "firstLoginComplete": {
          "type": "boolean",
          "description": "Flag to indicate if the user has completed the initial profile setup."
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName"
      ]
    },
    "Member": {
      "title": "Member",
      "type": "object",
      "description": "Represents editable, detailed profile information for a team member.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Foreign key linking to the User entity."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the member."
        },
        "location": {
          "type": "string",
          "description": "Location or address of the member."
        },
        "position": {
          "type": "array",
          "description": "Playing position(s) of the member.",
          "items": {
            "type": "string",
            "enum": [
              "Abwehr",
              "Zuspiel",
              "Angriff"
            ]
          }
        },
        "birthday": {
          "type": "string",
          "description": "Birthday of the member.",
          "format": "date"
        },
        "gender": {
          "type": "string",
          "description": "Gender of the member or team association.",
          "enum": [
            "m√§nnlich",
            "weiblich",
            "divers (Damenteam)",
            "divers (Herrenteam)"
          ]
        }
      },
      "required": [
        "userId"
      ]
    },
    "GroupMember": {
      "title": "Group Member",
      "type": "object",
      "description": "A denormalized, lightweight record representing a member within a specific group/team.",
      "properties": {
        "userId": { "type": "string" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "role": { "type": "string", "enum": ["admin", "user"] },
        "position": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
      "required": ["userId", "firstName", "lastName", "role"]
    },
    "Appointment": {
      "title": "Appointment",
      "type": "object",
      "description": "Represents an event, training, or game in the calendar.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the appointment."
        },
        "date": {
          "type": "string",
          "description": "The date and time of the appointment.",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "The type of appointment.",
          "enum": [
            "Training",
            "Spieltag",
            "Event"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the appointment."
        },
        "description": {
          "type": "string",
          "description": "A description of the appointment."
        }
      },
      "required": [
        "title",
        "date",
        "type"
      ]
    },
    "Group": {
      "title": "Group",
      "type": "object",
      "description": "Represents a class (Obergruppe) or a team (Untergruppe).",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the group."
        },
        "type": {
          "type": "string",
          "description": "The type of group.",
          "enum": ["class", "team"]
        },
        "parentId": {
          "type": "string",
          "description": "The ID of the parent group (class) if it's a team."
        }
      },
      "required": ["name", "type"]
    },
    "Poll": {
      "title": "Poll",
      "type": "object",
      "description": "Represents a survey or poll for team members.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the poll."
        },
        "options": {
          "type": "array",
          "description": "The predefined answer options for the poll.",
          "items": {
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "text": {"type": "string"}
            },
            "required": ["id", "text"]
          }
        },
        "allowCustomAnswers": {
          "type": "boolean",
          "description": "Whether users can add their own answers."
        },
        "endDate": {
          "type": "string",
          "description": "The date and time when the poll closes.",
          "format": "date-time"
        },
        "visibility": {
          "type": "object",
          "description": "Defines who can see and vote in the poll.",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["all", "specificTeams"]
            },
            "teamIds": {
              "type": "array",
              "description": "List of team IDs if visibility is specific.",
              "items": { "type": "string" }
            }
          }
        },
        "votes": {
          "type": "array",
          "description": "List of votes cast by users.",
          "items": {
            "type": "object",
            "properties": {
              "userId": {"type": "string"},
              "optionId": {"type": "string"},
              "customAnswer": {"type": "string"}
            },
            "required": ["userId", "optionId"]
          }
        },
        "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the poll was created."
        }
      },
      "required": ["title", "options", "endDate", "createdAt"]
    },
    "NewsArticle": {
      "title": "News Article",
      "type": "object",
      "description": "Represents a news article or announcement.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the news article."
        },
        "content": {
          "type": "string",
          "description": "The full content of the news article in markdown or plain text."
        },
        "imageUrls": {
          "type": "array",
          "description": "A list of URLs for images associated with the article.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "createdAt": {
          "type": "string",
          "description": "The timestamp when the article was created.",
          "format": "date-time"
        }
      },
      "required": ["title", "createdAt"]
    },
    "TreasuryTransaction": {
      "title": "Treasury Transaction",
      "type": "object",
      "description": "Represents a single financial transaction for a team's treasury.",
      "properties": {
        "teamId": {
          "type": "string",
          "description": "The ID of the team this transaction belongs to."
        },
        "description": {
          "type": "string",
          "description": "Description of the transaction (e.g., 'Team dinner', 'Penalty: Late for training')."
        },
        "amount": {
          "type": "number",
          "description": "The transaction amount. Positive for income, negative for expenses/penalties."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the transaction occurred."
        },
        "type": {
            "type": "string",
            "description": "The type of transaction",
            "enum": ["income", "expense", "penalty"]
        },
        "memberId": {
          "type": "string",
          "description": "Optional ID of the member associated with this transaction (especially for penalties)."
        },
        "status": {
          "type": "string",
          "description": "Status of the transaction, primarily for penalties.",
          "enum": ["paid", "unpaid"]
        }
      },
      "required": ["teamId", "description", "amount", "date", "type", "status"]
    },
    "Penalty": {
      "title": "Penalty",
      "type": "object",
      "description": "Defines a rule in a team's penalty catalog.",
      "properties": {
        "teamId": {
          "type": "string",
          "description": "The ID of the team this penalty rule belongs to."
        },
        "description": {
          "type": "string",
          "description": "The description of the penalty (e.g., 'Late for training')."
        },
        "amount": {
          "type": "number",
          "description": "The cost of the penalty (should be a positive number)."
        }
      },
      "required": ["teamId", "description", "amount"]
    },
    "Absence": {
      "title": "Absence",
      "type": "object",
      "description": "Represents a user's planned absence, like a vacation or sickness.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who is absent."
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the absence."
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the absence."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the absence (e.g., 'Urlaub', 'Krank')."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the absence was created."
        }
      },
      "required": ["userId", "startDate", "endDate", "reason", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/backend/entities/User"
      },
      "description": "Stores core user authentication data. Name is read-only after creation. Accessible only by admins or the authenticated user."
    },
    "/members/{memberId}": {
      "schema": {
        "$ref": "#/backend/entities/Member"
      },
      "description": "Stores editable user profile data. Accessible by admins or the owning user."
    },
     "/groups/{groupId}/members/{memberId}": {
      "schema": { "$ref": "#/backend/entities/GroupMember" },
      "description": "Denormalized, lightweight list of members for a specific group. Used for fast lookups of team rosters."
    },
    "/appointments/{appointmentId}": {
      "schema": {
        "$ref": "#/backend/entities/Appointment"
      },
      "description": "Stores all appointments. Writable only by admins, readable by all users."
    },
    "/groups/{groupId}": {
      "schema": {
        "$ref": "#/backend/entities/Group"
      },
      "description": "Stores all groups (classes and teams). Writable only by admins, readable by all users."
    },
    "/polls/{pollId}": {
      "schema": {
        "$ref": "#/backend/entities/Poll"
      },
      "description": "Stores all polls. Writable only by admins, readable by designated users."
    },
     "/news/{newsId}": {
      "schema": {
        "$ref": "#/backend/entities/NewsArticle"
      },
      "description": "Stores all news articles. Writable only by admins, readable by all users."
    },
    "/treasury/{transactionId}": {
      "schema": {
        "$ref": "#/backend/entities/TreasuryTransaction"
      },
      "description": "Stores all financial transactions for all teams. Writable only by admins."
    },
    "/penalties/{penaltyId}": {
      "schema": {
        "$ref": "#/backend/entities/Penalty"
      },
      "description": "Stores the penalty catalog rules for all teams. Writable only by admins."
    },
    "/absences/{absenceId}": {
        "schema": {
            "$ref": "#/backend/entities/Absence"
        },
        "description": "Stores user absences. Writable only by the user themselves or an admin."
    }
  }
}
