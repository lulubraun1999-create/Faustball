{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user account and their profile within the FaustApp application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user account (matches Firebase Auth UID)."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        },
        "role": {
          "type": "string",
          "description": "User role, e.g., 'admin' or 'user'.",
          "enum": [
            "admin",
            "user"
          ]
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the member."
        },
        "location": {
          "type": "string",
          "description": "Location or address of the member."
        },
        "position": {
          "type": "string",
          "description": "Playing position of the member.",
          "enum": [
            "Abwehr",
            "Zuspiel",
            "Angriff"
          ]
        },
        "birthday": {
          "type": "string",
          "description": "Birthday of the member.",
          "format": "date"
        },
        "gender": {
          "type": "string",
          "description": "Gender of the member or team association.",
          "enum": [
            "m√§nnlich",
            "weiblich",
            "divers (damenteam)",
            "divers (herrenteam)"
          ]
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/backend/entities/User"
      },
      "description": "Stores user authentication and profile data. Accessible only by the authenticated user (path-based ownership).",
      "rules": "allow read, write: if request.auth.uid == userId;"
    }
  }
}
